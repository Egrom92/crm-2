[{"/Users/roman/PhpstormProjects/training/crm-2/src/index.js":"1","/Users/roman/PhpstormProjects/training/crm-2/src/App.js":"2","/Users/roman/PhpstormProjects/training/crm-2/src/reportWebVitals.js":"3","/Users/roman/PhpstormProjects/training/crm-2/src/pages/NewOrderPage.jsx":"4","/Users/roman/PhpstormProjects/training/crm-2/src/pages/OrderPage.jsx":"5","/Users/roman/PhpstormProjects/training/crm-2/src/pages/ManagerPage/index.jsx":"6","/Users/roman/PhpstormProjects/training/crm-2/src/hc.js":"7","/Users/roman/PhpstormProjects/training/crm-2/src/pages/ManagerPage/OrderFilter/OrderFilter.jsx":"8","/Users/roman/PhpstormProjects/training/crm-2/src/pages/ManagerPage/Pagination/Pagination.jsx":"9","/Users/roman/PhpstormProjects/training/crm-2/src/pages/ManagerPage/Orders/Orders.jsx":"10","/Users/roman/PhpstormProjects/training/crm-2/src/HttpClient.jsx":"11","/Users/roman/PhpstormProjects/training/crm-2/src/data.js":"12"},{"size":534,"mtime":1611922406000,"results":"13","hashOfConfig":"14"},{"size":488,"mtime":1611951318369,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1611922406000,"results":"16","hashOfConfig":"14"},{"size":2438,"mtime":1611922406000,"results":"17","hashOfConfig":"14"},{"size":4160,"mtime":1611996853254,"results":"18","hashOfConfig":"14"},{"size":1275,"mtime":1611951548990,"results":"19","hashOfConfig":"14"},{"size":259,"mtime":1611922406000,"results":"20","hashOfConfig":"14"},{"size":1833,"mtime":1611922406000,"results":"21","hashOfConfig":"14"},{"size":1391,"mtime":1611922406000,"results":"22","hashOfConfig":"14"},{"size":3357,"mtime":1611957809156,"results":"23","hashOfConfig":"14"},{"size":2692,"mtime":1611922406000,"results":"24","hashOfConfig":"14"},{"size":1303,"mtime":1611967242608,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"du01p8",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/roman/PhpstormProjects/training/crm-2/src/index.js",[],["53","54"],"/Users/roman/PhpstormProjects/training/crm-2/src/App.js",["55","56"],"/Users/roman/PhpstormProjects/training/crm-2/src/reportWebVitals.js",[],"/Users/roman/PhpstormProjects/training/crm-2/src/pages/NewOrderPage.jsx",[],"/Users/roman/PhpstormProjects/training/crm-2/src/pages/OrderPage.jsx",["57"],"/Users/roman/PhpstormProjects/training/crm-2/src/pages/ManagerPage/index.jsx",["58"],"/Users/roman/PhpstormProjects/training/crm-2/src/hc.js",[],"/Users/roman/PhpstormProjects/training/crm-2/src/pages/ManagerPage/OrderFilter/OrderFilter.jsx",["59"],"import React from 'react'\n\nexport default function OrderFilter(props) {\n    const {setOrders, hc} = props\n\n    const userSort = async (title, direction) => {\n        const userList = await hc.get(\"/users\", {\n            _sort: title,\n            _order: direction\n        });\n\n        setOrders(userList);\n    };\n\n    return (\n        <div className=\"form-row p-2\">\n            <div className=\"form-group col\">\n                <label>ФИО:</label>\n                <input className=\"form-control\" type=\"text\" placeholder=\"ФИО\"/>\n            </div>\n            <div className=\"form-group col\">\n                <label>Заказ:</label>\n                <select className=\"form-control\">\n                    <option defaultValue></option>\n                    <option></option>\n                </select>\n            </div>\n            <div className=\"form-group col\">\n                <label>Статус:</label>\n                <select className=\"form-control\">\n                    <option defaultValue>Все</option>\n                    <option>Новые</option>\n                    <option>На исполнение</option>\n                    <option>Возврат</option>\n                    <option>Заархивированные</option>\n                </select>\n            </div>\n            <div className=\"form-group col\">\n                <label>Сумма:</label>\n                <input className=\"form-control mb-2\" type=\"number\" placeholder=\"От\"/>\n                <input className=\"form-control\" type=\"number\" placeholder=\"До\"/>\n            </div>\n            <div className=\"form-group col\">\n                <label>Дата:</label>\n                <input className=\"form-control mb-2\" type=\"date\"/>\n                <input className=\"form-control\" type=\"date\"/>\n            </div>\n        </div>\n    )\n}","/Users/roman/PhpstormProjects/training/crm-2/src/pages/ManagerPage/Pagination/Pagination.jsx",[],"/Users/roman/PhpstormProjects/training/crm-2/src/pages/ManagerPage/Orders/Orders.jsx",["60","61","62","63","64"],"import React, { useEffect, useState }  from 'react'\nimport orderTableHeaders from '../../../data'\nimport { Route, NavLink, Switch } from \"react-router-dom\";\nimport hc from '../../../hc';\nimport NewOrderPage from '../../NewOrderPage';\nimport OrderPage from '../../OrderPage';\nimport ManagerPage from '../index';\n\nconst statusClass = {\n    new: 'badge-primary',\n    process: 'badge-warning',\n    back: 'badge-danger',\n    archived: 'badge-dark',\n};\n\nexport default function Orders(props) {\n    const [orders, setOrders] = useState([]);\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        hc.get(\"/orders\", { _limit: 1000 })\n            .then((orders) =>\n                setOrders(orders)\n            );\n    }, []);\n\n    useEffect(() => {\n        hc.get(\"/products\", { _limit: 1000 }).then((products) =>\n            setProducts(products)\n        );\n    }, []);\n\n\n\n    const fields = {\n        ID: 'id',\n        client: 'fullname',\n        name: 'productId',\n        price: 'productId',\n        status: 'status',\n        dateTime: 'createAr'\n    }\n    const trArr = [];\n    orders.map((order, i) => {\n        let tdArr= []\n        orderTableHeaders.map((header, i) => {\n            const value = order[fields[header.field]]\n            let td\n            if( header.field === 'status') {\n                td = (\n                    <td key={i} className={ `badge ${statusClass[value]}`}>\n                    {value}\n                </td>\n                )\n            } else if(header.field === 'action' ) {\n                td = (\n                    <td key={i}>\n                        <NavLink to={`/order/${order.id}`} className='btn btn-outline-primary btn-sm'>Редактировать</NavLink>\n                    </td>\n                )\n            } else if(header.field === 'dateTime') {\n                const date = new Date(order.createdAt)\n                const createdAt = `${date.getDate()}.${date.getMonth()}.${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`;\n\n                td = (\n                    <td key={i}>\n                        {createdAt}\n                    </td>\n                )\n            } else if(header.field === 'name' || header.field === 'price' ) {\n                products.map(product => {\n                    if (order.productId === product.id) {\n                        td = (\n                            <td key={i}>\n                                {product[header.field]}\n                            </td>\n                        )\n                    }\n                })\n            } else (\n                td = (\n                    <td key={i}>\n                        {value}\n                    </td>\n                )\n            )\n\n        tdArr.push(td)\n        })\n        const tr = (\n            <tr key={i}>\n                {tdArr}\n            </tr>\n        )\n        trArr.push(tr)\n    })\n    \n    return (\n        <div className=\"table-responsive\">\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        {orderTableHeaders.map((header, i) => (\n                            <th key={i}>{header.label || header.field}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>{trArr}</tbody>\n            </table>\n        </div>\n    )\n}\n","/Users/roman/PhpstormProjects/training/crm-2/src/HttpClient.jsx",[],"/Users/roman/PhpstormProjects/training/crm-2/src/data.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":20},{"ruleId":"69","severity":1,"message":"73","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":17},{"ruleId":"69","severity":1,"message":"74","line":14,"column":20,"nodeType":"71","messageId":"72","endLine":14,"endColumn":31},{"ruleId":"69","severity":1,"message":"75","line":11,"column":5,"nodeType":"71","messageId":"72","endLine":11,"endColumn":7},{"ruleId":"69","severity":1,"message":"76","line":6,"column":11,"nodeType":"71","messageId":"72","endLine":6,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":20},{"ruleId":"69","severity":1,"message":"77","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":44,"column":27,"nodeType":"80","messageId":"81","endLine":44,"endColumn":29},{"ruleId":"78","severity":1,"message":"79","line":46,"column":43,"nodeType":"80","messageId":"81","endLine":46,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":74,"column":38,"nodeType":"80","messageId":"81","endLine":74,"endColumn":40},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'NewOrderPage' is defined but never used.","Identifier","unusedVar","'OrderPage' is defined but never used.","'setCreateAt' is assigned a value but never used.","'hc' is assigned a value but never used.","'userSort' is assigned a value but never used.","'ManagerPage' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]